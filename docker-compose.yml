version: '3.8'

services:
  # --- Service Registry ---
  service-registry:
    build: ./service-registry
    ports: ["8761:8761"]
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # --- Databases ---
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: appointment_db
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: patient_service
    ports: ["27017:27017"]
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  # --- Authorization ---
  keycloak:
    build: ./keycloak
    ports: ["9090:8080"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin        # ← CONFIRM ADMIN USER
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin # ← CONFIRM ADMIN PASS
      # KC_HEALTH_ENABLED: "true"
      # KC_DB: postgres
      # KC_DB_URL: jdbc:postgresql://postgres:5432/appointment_db  # Shared database
      # KC_DB_USERNAME: postgres
      # KC_DB_PASSWORD: root
      # KC_HOSTNAME: localhost
    # volumes:
    #   - kcdata:/opt/keycloak/data  # Persists realm config, users, etc.
    #   - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm.json 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  # --- Microservices ---
  patient-service:
    build: ./patient-service
    ports: ["8081:8081"]
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_DATA_MONGODB_URI: mongodb://admin:root@mongodb:27017/patient_service?authSource=admin
    depends_on:
      service-registry:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  appointment-service:
    build: ./appointment-service
    ports: ["8082:8082"]
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appointment_db
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy

  # --- API Gateway ---
  api-gateway:
    build: ./api-gateway
    ports: ["8080:8080"]
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/hospital-service-realm
    depends_on:
      service-registry:
        condition: service_healthy
      keycloak:
        condition: service_healthy

volumes:
  pgdata:
  # kcdata:
  mongodata:  # Added MongoDB data volume